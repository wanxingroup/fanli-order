// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type OrderStatus int32

const (
	OrderStatus_Unknown   OrderStatus = 0
	OrderStatus_NotPay    OrderStatus = 1
	OrderStatus_Paid      OrderStatus = 2
	OrderStatus_Delivered OrderStatus = 3
	OrderStatus_Received  OrderStatus = 4
	OrderStatus_Closed    OrderStatus = 5
	OrderStatus_Completed OrderStatus = 6
	OrderStatus_Cancel    OrderStatus = 7
)

var OrderStatus_name = map[int32]string{
	0: "Unknown",
	1: "NotPay",
	2: "Paid",
	3: "Delivered",
	4: "Received",
	5: "Closed",
	6: "Completed",
	7: "Cancel",
}
var OrderStatus_value = map[string]int32{
	"Unknown":   0,
	"NotPay":    1,
	"Paid":      2,
	"Delivered": 3,
	"Received":  4,
	"Closed":    5,
	"Completed": 6,
	"Cancel":    7,
}

func (x OrderStatus) String() string {
	return proto.EnumName(OrderStatus_name, int32(x))
}
func (OrderStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type RefundStatus int32

const (
	RefundStatus_RefundStatusNormal    RefundStatus = 0
	RefundStatus_RefundStatusApplying  RefundStatus = 1
	RefundStatus_RefundStatusCompleted RefundStatus = 2
	RefundStatus_RefundStatusReject    RefundStatus = 3
)

var RefundStatus_name = map[int32]string{
	0: "RefundStatusNormal",
	1: "RefundStatusApplying",
	2: "RefundStatusCompleted",
	3: "RefundStatusReject",
}
var RefundStatus_value = map[string]int32{
	"RefundStatusNormal":    0,
	"RefundStatusApplying":  1,
	"RefundStatusCompleted": 2,
	"RefundStatusReject":    3,
}

func (x RefundStatus) String() string {
	return proto.EnumName(RefundStatus_name, int32(x))
}
func (RefundStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

type OrderType int32

const (
	OrderType_OrderTypeUnknown OrderType = 0
	OrderType_OrderTypeShop    OrderType = 1
	OrderType_OrderTypeCard    OrderType = 2
)

var OrderType_name = map[int32]string{
	0: "OrderTypeUnknown",
	1: "OrderTypeShop",
	2: "OrderTypeCard",
}
var OrderType_value = map[string]int32{
	"OrderTypeUnknown": 0,
	"OrderTypeShop":    1,
	"OrderTypeCard":    2,
}

func (x OrderType) String() string {
	return proto.EnumName(OrderType_name, int32(x))
}
func (OrderType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

// 创建订单请求参数
type CreateOrderRequest struct {
	// 商家ID
	MerchantId uint64 `protobuf:"varint,1,opt,name=merchantId" json:"merchantId,omitempty"`
	// 店铺ID
	ShopId uint64 `protobuf:"varint,2,opt,name=shopId" json:"shopId,omitempty"`
	// 用户ID
	UserId uint64 `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	// 创建订单包含的商品列表
	GoodsList []*CreateOrderGoods `protobuf:"bytes,4,rep,name=goodsList" json:"goodsList,omitempty"`
	// 创建订单使用的优惠资源信息
	Discounts []*CreateOrderDiscount `protobuf:"bytes,5,rep,name=discounts" json:"discounts,omitempty"`
	// 收货地址
	Address *Address `protobuf:"bytes,6,opt,name=address" json:"address,omitempty"`
	// 订单备注
	Remark string `protobuf:"bytes,7,opt,name=remark" json:"remark,omitempty"`
	// 附属信息（后续实现，用于记录订单来源、统计信息等下单时的瞬间的附属信息）
	Attributes []*Attribute `protobuf:"bytes,8,rep,name=attributes" json:"attributes,omitempty"`
	// VIP价权限
	IsVip bool `protobuf:"varint,9,opt,name=isVip" json:"isVip,omitempty"`
	// 订单类型
	OrderType OrderType `protobuf:"varint,10,opt,name=orderType,enum=protos.OrderType" json:"orderType,omitempty"`
	// 订单 ID(未传自动生成)
	OrderId uint64 `protobuf:"varint,11,opt,name=orderId" json:"orderId,omitempty"`
}

func (m *CreateOrderRequest) Reset()                    { *m = CreateOrderRequest{} }
func (m *CreateOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateOrderRequest) ProtoMessage()               {}
func (*CreateOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *CreateOrderRequest) GetMerchantId() uint64 {
	if m != nil {
		return m.MerchantId
	}
	return 0
}

func (m *CreateOrderRequest) GetShopId() uint64 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *CreateOrderRequest) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CreateOrderRequest) GetGoodsList() []*CreateOrderGoods {
	if m != nil {
		return m.GoodsList
	}
	return nil
}

func (m *CreateOrderRequest) GetDiscounts() []*CreateOrderDiscount {
	if m != nil {
		return m.Discounts
	}
	return nil
}

func (m *CreateOrderRequest) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *CreateOrderRequest) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *CreateOrderRequest) GetAttributes() []*Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *CreateOrderRequest) GetIsVip() bool {
	if m != nil {
		return m.IsVip
	}
	return false
}

func (m *CreateOrderRequest) GetOrderType() OrderType {
	if m != nil {
		return m.OrderType
	}
	return OrderType_OrderTypeUnknown
}

func (m *CreateOrderRequest) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

// 创建订单返回值
type CreateOrderReply struct {
	// 订单信息
	Order *Order `protobuf:"bytes,1,opt,name=order" json:"order,omitempty"`
	// 错误信息
	Error *Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *CreateOrderReply) Reset()                    { *m = CreateOrderReply{} }
func (m *CreateOrderReply) String() string            { return proto.CompactTextString(m) }
func (*CreateOrderReply) ProtoMessage()               {}
func (*CreateOrderReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *CreateOrderReply) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *CreateOrderReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// 创建订单包含的商品信息
type CreateOrderGoods struct {
	// 商品ID
	GoodsId uint64 `protobuf:"varint,1,opt,name=goodsId" json:"goodsId,omitempty"`
	// SKU ID
	SkuId uint64 `protobuf:"varint,2,opt,name=skuId" json:"skuId,omitempty"`
	// 商品数量
	Count uint32 `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	// 价格（单位：分）
	Price uint64 `protobuf:"varint,4,opt,name=price" json:"price,omitempty"`
	// 会员价
	VipPrice uint64 `protobuf:"varint,5,opt,name=vipPrice" json:"vipPrice,omitempty"`
	// 积分
	Point uint64 `protobuf:"varint,6,opt,name=point" json:"point,omitempty"`
	// 附属信息（后续实现，用于记录下单时原价或者下单时商品版本号之类的下单时的瞬间值）
	Attributes []*Attribute `protobuf:"bytes,7,rep,name=attributes" json:"attributes,omitempty"`
}

func (m *CreateOrderGoods) Reset()                    { *m = CreateOrderGoods{} }
func (m *CreateOrderGoods) String() string            { return proto.CompactTextString(m) }
func (*CreateOrderGoods) ProtoMessage()               {}
func (*CreateOrderGoods) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *CreateOrderGoods) GetGoodsId() uint64 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *CreateOrderGoods) GetSkuId() uint64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *CreateOrderGoods) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *CreateOrderGoods) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *CreateOrderGoods) GetVipPrice() uint64 {
	if m != nil {
		return m.VipPrice
	}
	return 0
}

func (m *CreateOrderGoods) GetPoint() uint64 {
	if m != nil {
		return m.Point
	}
	return 0
}

func (m *CreateOrderGoods) GetAttributes() []*Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// 附加属性（一般用于附属信息数据）
type Attribute struct {
	// 属性名
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// 属性值
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Attribute) Reset()                    { *m = Attribute{} }
func (m *Attribute) String() string            { return proto.CompactTextString(m) }
func (*Attribute) ProtoMessage()               {}
func (*Attribute) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *Attribute) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Attribute) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// 创建订单使用的折扣信息
type CreateOrderDiscount struct {
	// 折扣类型（具体参考营销系统）
	Type uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	// 折扣对象ID
	ObjectId string `protobuf:"bytes,2,opt,name=objectId" json:"objectId,omitempty"`
}

func (m *CreateOrderDiscount) Reset()                    { *m = CreateOrderDiscount{} }
func (m *CreateOrderDiscount) String() string            { return proto.CompactTextString(m) }
func (*CreateOrderDiscount) ProtoMessage()               {}
func (*CreateOrderDiscount) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *CreateOrderDiscount) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *CreateOrderDiscount) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

// 订单地址信息
type Address struct {
	// 省份
	Province string `protobuf:"bytes,1,opt,name=province" json:"province,omitempty"`
	// 城市
	City string `protobuf:"bytes,2,opt,name=city" json:"city,omitempty"`
	// 辖区
	District string `protobuf:"bytes,3,opt,name=district" json:"district,omitempty"`
	// 接到
	Street string `protobuf:"bytes,4,opt,name=street" json:"street,omitempty"`
	// 具体地址
	Address string `protobuf:"bytes,5,opt,name=address" json:"address,omitempty"`
	// 收件人名称
	ReceiverName string `protobuf:"bytes,6,opt,name=receiverName" json:"receiverName,omitempty"`
	// 联系电话
	Tel string `protobuf:"bytes,7,opt,name=tel" json:"tel,omitempty"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *Address) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Address) GetDistrict() string {
	if m != nil {
		return m.District
	}
	return ""
}

func (m *Address) GetStreet() string {
	if m != nil {
		return m.Street
	}
	return ""
}

func (m *Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Address) GetReceiverName() string {
	if m != nil {
		return m.ReceiverName
	}
	return ""
}

func (m *Address) GetTel() string {
	if m != nil {
		return m.Tel
	}
	return ""
}

// 订单信息
type Order struct {
	// 订单ID
	OrderId uint64 `protobuf:"varint,1,opt,name=orderId" json:"orderId,omitempty"`
	// 店铺ID
	ShopId uint64 `protobuf:"varint,2,opt,name=shopId" json:"shopId,omitempty"`
	// 用户ID
	UserId uint64 `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	// 状态
	Status OrderStatus `protobuf:"varint,4,opt,name=status,enum=protos.OrderStatus" json:"status,omitempty"`
	// 商品总价格，单位：分
	GoodsTotalPrice uint64 `protobuf:"varint,5,opt,name=goodsTotalPrice" json:"goodsTotalPrice,omitempty"`
	// 订单应付金额，单位：分
	Payable uint64 `protobuf:"varint,6,opt,name=payable" json:"payable,omitempty"`
	// 运费，单位：分
	Freight uint32 `protobuf:"varint,7,opt,name=freight" json:"freight,omitempty"`
	// 发货包裹信息
	LogisticsList []*Logistics `protobuf:"bytes,8,rep,name=logisticsList" json:"logisticsList,omitempty"`
	// 商品列表
	GoodsList []*Goods `protobuf:"bytes,9,rep,name=goodsList" json:"goodsList,omitempty"`
	// 折扣信息列表
	DiscountList []*Discount `protobuf:"bytes,10,rep,name=discountList" json:"discountList,omitempty"`
	// 地址信息
	Address *Address `protobuf:"bytes,11,opt,name=address" json:"address,omitempty"`
	// 支付信息
	PaymentList []*Payment `protobuf:"bytes,12,rep,name=paymentList" json:"paymentList,omitempty"`
	// 状态变更日志
	StatusModificationLogList []*StatusModificationLog `protobuf:"bytes,13,rep,name=statusModificationLogList" json:"statusModificationLogList,omitempty"`
	// 订单是否已评价
	Comment *Comment `protobuf:"bytes,14,opt,name=comment" json:"comment,omitempty"`
	// 订单创建时间（UNIX时间戳，单位：秒）
	CreateTime uint64 `protobuf:"varint,15,opt,name=CreateTime" json:"CreateTime,omitempty"`
	// 订单更新时间（UNIX时间戳，单位：秒）
	UpdateTime uint64 `protobuf:"varint,16,opt,name=UpdateTime" json:"UpdateTime,omitempty"`
	// 订单自动取消时间（UNIX时间戳，单位：秒，为零代表不会自动取消）
	AutoCancelTime uint64 `protobuf:"varint,17,opt,name=AutoCancelTime" json:"AutoCancelTime,omitempty"`
	// 备注
	Remark string `protobuf:"bytes,18,opt,name=remark" json:"remark,omitempty"`
	// 订单支付时间（UNIX 时间戳，单位：秒）
	PaidTime uint64 `protobuf:"varint,19,opt,name=paidTime" json:"paidTime,omitempty"`
	// 应付积分
	Point uint64 `protobuf:"varint,20,opt,name=point" json:"point,omitempty"`
	// 是否会员价购买
	IsVip bool `protobuf:"varint,21,opt,name=isVip" json:"isVip,omitempty"`
	// 订单类型
	OrderType OrderType `protobuf:"varint,22,opt,name=orderType,enum=protos.OrderType" json:"orderType,omitempty"`
	// 退款状态
	RefundStatus RefundStatus `protobuf:"varint,23,opt,name=refundStatus,enum=protos.RefundStatus" json:"refundStatus,omitempty"`
}

func (m *Order) Reset()                    { *m = Order{} }
func (m *Order) String() string            { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()               {}
func (*Order) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *Order) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *Order) GetShopId() uint64 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *Order) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Order) GetStatus() OrderStatus {
	if m != nil {
		return m.Status
	}
	return OrderStatus_Unknown
}

func (m *Order) GetGoodsTotalPrice() uint64 {
	if m != nil {
		return m.GoodsTotalPrice
	}
	return 0
}

func (m *Order) GetPayable() uint64 {
	if m != nil {
		return m.Payable
	}
	return 0
}

func (m *Order) GetFreight() uint32 {
	if m != nil {
		return m.Freight
	}
	return 0
}

func (m *Order) GetLogisticsList() []*Logistics {
	if m != nil {
		return m.LogisticsList
	}
	return nil
}

func (m *Order) GetGoodsList() []*Goods {
	if m != nil {
		return m.GoodsList
	}
	return nil
}

func (m *Order) GetDiscountList() []*Discount {
	if m != nil {
		return m.DiscountList
	}
	return nil
}

func (m *Order) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Order) GetPaymentList() []*Payment {
	if m != nil {
		return m.PaymentList
	}
	return nil
}

func (m *Order) GetStatusModificationLogList() []*StatusModificationLog {
	if m != nil {
		return m.StatusModificationLogList
	}
	return nil
}

func (m *Order) GetComment() *Comment {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Order) GetCreateTime() uint64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Order) GetUpdateTime() uint64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *Order) GetAutoCancelTime() uint64 {
	if m != nil {
		return m.AutoCancelTime
	}
	return 0
}

func (m *Order) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *Order) GetPaidTime() uint64 {
	if m != nil {
		return m.PaidTime
	}
	return 0
}

func (m *Order) GetPoint() uint64 {
	if m != nil {
		return m.Point
	}
	return 0
}

func (m *Order) GetIsVip() bool {
	if m != nil {
		return m.IsVip
	}
	return false
}

func (m *Order) GetOrderType() OrderType {
	if m != nil {
		return m.OrderType
	}
	return OrderType_OrderTypeUnknown
}

func (m *Order) GetRefundStatus() RefundStatus {
	if m != nil {
		return m.RefundStatus
	}
	return RefundStatus_RefundStatusNormal
}

// 物流包裹信息
type Logistics struct {
	// 包裹ID（只是一个ID，并不是物流单号）
	PackageId uint64 `protobuf:"varint,1,opt,name=packageId" json:"packageId,omitempty"`
	// 物流公司名称
	LogisticsCompany string `protobuf:"bytes,2,opt,name=logisticsCompany" json:"logisticsCompany,omitempty"`
	// 物流单号
	ExpressNumber string `protobuf:"bytes,3,opt,name=expressNumber" json:"expressNumber,omitempty"`
}

func (m *Logistics) Reset()                    { *m = Logistics{} }
func (m *Logistics) String() string            { return proto.CompactTextString(m) }
func (*Logistics) ProtoMessage()               {}
func (*Logistics) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *Logistics) GetPackageId() uint64 {
	if m != nil {
		return m.PackageId
	}
	return 0
}

func (m *Logistics) GetLogisticsCompany() string {
	if m != nil {
		return m.LogisticsCompany
	}
	return ""
}

func (m *Logistics) GetExpressNumber() string {
	if m != nil {
		return m.ExpressNumber
	}
	return ""
}

// 订单商品信息
type Goods struct {
	// 商品ID
	SpuId uint64 `protobuf:"varint,1,opt,name=spuId" json:"spuId,omitempty"`
	// 商品SKU ID
	SkuId uint64 `protobuf:"varint,2,opt,name=skuId" json:"skuId,omitempty"`
	// 商品数量
	Count uint32 `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	// 下单时的价格，单位：分
	Price uint64 `protobuf:"varint,4,opt,name=price" json:"price,omitempty"`
	// 会员价
	VipPrice uint64 `protobuf:"varint,5,opt,name=vipPrice" json:"vipPrice,omitempty"`
	// 积分
	Point uint64 `protobuf:"varint,6,opt,name=point" json:"point,omitempty"`
}

func (m *Goods) Reset()                    { *m = Goods{} }
func (m *Goods) String() string            { return proto.CompactTextString(m) }
func (*Goods) ProtoMessage()               {}
func (*Goods) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *Goods) GetSpuId() uint64 {
	if m != nil {
		return m.SpuId
	}
	return 0
}

func (m *Goods) GetSkuId() uint64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *Goods) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Goods) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Goods) GetVipPrice() uint64 {
	if m != nil {
		return m.VipPrice
	}
	return 0
}

func (m *Goods) GetPoint() uint64 {
	if m != nil {
		return m.Point
	}
	return 0
}

// 订单折扣信息
type Discount struct {
	// 折扣类型（具体参考营销系统）
	Type uint32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	// 折扣对象ID
	ObjectId string `protobuf:"bytes,2,opt,name=objectId" json:"objectId,omitempty"`
	// 折扣物品价值，单位：分
	DiscountPrice uint64 `protobuf:"varint,3,opt,name=discountPrice" json:"discountPrice,omitempty"`
}

func (m *Discount) Reset()                    { *m = Discount{} }
func (m *Discount) String() string            { return proto.CompactTextString(m) }
func (*Discount) ProtoMessage()               {}
func (*Discount) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *Discount) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Discount) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *Discount) GetDiscountPrice() uint64 {
	if m != nil {
		return m.DiscountPrice
	}
	return 0
}

// 订单支付信息
type Payment struct {
	// 支付网关事务ID
	TransactionId string `protobuf:"bytes,1,opt,name=transactionId" json:"transactionId,omitempty"`
	// 实付金额，单位：分
	PaidPrice uint64 `protobuf:"varint,2,opt,name=paidPrice" json:"paidPrice,omitempty"`
	// 支付渠道（富友、汇付）
	PaymentChannel string `protobuf:"bytes,3,opt,name=paymentChannel" json:"paymentChannel,omitempty"`
	// 支付方式（H5、APP、公众号、主被扫码）
	PaymentMode string `protobuf:"bytes,4,opt,name=paymentMode" json:"paymentMode,omitempty"`
	// 支付产品（微信、支付宝）
	PaymentProduct string `protobuf:"bytes,5,opt,name=paymentProduct" json:"paymentProduct,omitempty"`
	// 支付时间，UNIX时间戳，单位：秒
	PaidTime uint64 `protobuf:"varint,6,opt,name=paidTime" json:"paidTime,omitempty"`
}

func (m *Payment) Reset()                    { *m = Payment{} }
func (m *Payment) String() string            { return proto.CompactTextString(m) }
func (*Payment) ProtoMessage()               {}
func (*Payment) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *Payment) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *Payment) GetPaidPrice() uint64 {
	if m != nil {
		return m.PaidPrice
	}
	return 0
}

func (m *Payment) GetPaymentChannel() string {
	if m != nil {
		return m.PaymentChannel
	}
	return ""
}

func (m *Payment) GetPaymentMode() string {
	if m != nil {
		return m.PaymentMode
	}
	return ""
}

func (m *Payment) GetPaymentProduct() string {
	if m != nil {
		return m.PaymentProduct
	}
	return ""
}

func (m *Payment) GetPaidTime() uint64 {
	if m != nil {
		return m.PaidTime
	}
	return 0
}

// 订单状态变更日志
type StatusModificationLog struct {
	// 目标状态
	DestinationStatus OrderStatus `protobuf:"varint,1,opt,name=destinationStatus,enum=protos.OrderStatus" json:"destinationStatus,omitempty"`
	// 时间，UNIX时间戳，单位：秒
	Time uint64 `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
}

func (m *StatusModificationLog) Reset()                    { *m = StatusModificationLog{} }
func (m *StatusModificationLog) String() string            { return proto.CompactTextString(m) }
func (*StatusModificationLog) ProtoMessage()               {}
func (*StatusModificationLog) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *StatusModificationLog) GetDestinationStatus() OrderStatus {
	if m != nil {
		return m.DestinationStatus
	}
	return OrderStatus_Unknown
}

func (m *StatusModificationLog) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

// 订单评论信息
type Comment struct {
	// 是否已评论
	Commented bool `protobuf:"varint,1,opt,name=Commented" json:"Commented,omitempty"`
}

func (m *Comment) Reset()                    { *m = Comment{} }
func (m *Comment) String() string            { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()               {}
func (*Comment) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *Comment) GetCommented() bool {
	if m != nil {
		return m.Commented
	}
	return false
}

// 订单详情请求数据
type OrderDetailsRequest struct {
	// 订单ID
	OrderId uint64 `protobuf:"varint,1,opt,name=orderId" json:"orderId,omitempty"`
	// 店铺ID
	ShopId uint64 `protobuf:"varint,2,opt,name=shopId" json:"shopId,omitempty"`
	// 用户ID
	UserId uint64 `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
}

func (m *OrderDetailsRequest) Reset()                    { *m = OrderDetailsRequest{} }
func (m *OrderDetailsRequest) String() string            { return proto.CompactTextString(m) }
func (*OrderDetailsRequest) ProtoMessage()               {}
func (*OrderDetailsRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

func (m *OrderDetailsRequest) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *OrderDetailsRequest) GetShopId() uint64 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *OrderDetailsRequest) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// 创建订单返回值
type OrderDetailsReply struct {
	// 订单信息
	Order *Order `protobuf:"bytes,1,opt,name=order" json:"order,omitempty"`
	// 错误信息
	Error *Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *OrderDetailsReply) Reset()                    { *m = OrderDetailsReply{} }
func (m *OrderDetailsReply) String() string            { return proto.CompactTextString(m) }
func (*OrderDetailsReply) ProtoMessage()               {}
func (*OrderDetailsReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *OrderDetailsReply) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *OrderDetailsReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// 取消订单请求数据
type CancelOrderRequest struct {
	// 订单ID
	OrderId uint64 `protobuf:"varint,1,opt,name=orderId" json:"orderId,omitempty"`
}

func (m *CancelOrderRequest) Reset()                    { *m = CancelOrderRequest{} }
func (m *CancelOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*CancelOrderRequest) ProtoMessage()               {}
func (*CancelOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

func (m *CancelOrderRequest) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

// 取消订单返回值
type CancelOrderReply struct {
	// 是否操作成功
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// 错误信息
	Error *Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *CancelOrderReply) Reset()                    { *m = CancelOrderReply{} }
func (m *CancelOrderReply) String() string            { return proto.CompactTextString(m) }
func (*CancelOrderReply) ProtoMessage()               {}
func (*CancelOrderReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{16} }

func (m *CancelOrderReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CancelOrderReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// 订单支付完成请求数据
type PaidOrderRequest struct {
	// 订单ID
	OrderId uint64 `protobuf:"varint,1,opt,name=orderId" json:"orderId,omitempty"`
	// 订单支付信息
	Payment *Payment `protobuf:"bytes,2,opt,name=payment" json:"payment,omitempty"`
}

func (m *PaidOrderRequest) Reset()                    { *m = PaidOrderRequest{} }
func (m *PaidOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*PaidOrderRequest) ProtoMessage()               {}
func (*PaidOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{17} }

func (m *PaidOrderRequest) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *PaidOrderRequest) GetPayment() *Payment {
	if m != nil {
		return m.Payment
	}
	return nil
}

// 订单支付完成返回值
type PaidOrderReply struct {
	// 是否操作成功
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// 错误信息
	Error *Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *PaidOrderReply) Reset()                    { *m = PaidOrderReply{} }
func (m *PaidOrderReply) String() string            { return proto.CompactTextString(m) }
func (*PaidOrderReply) ProtoMessage()               {}
func (*PaidOrderReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{18} }

func (m *PaidOrderReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *PaidOrderReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// 订单发货请求数据
type DeliverOrderRequest struct {
	// 订单ID
	OrderId uint64 `protobuf:"varint,1,opt,name=orderId" json:"orderId,omitempty"`
	// 发货包裹信息
	DeliveryPackage *DeliveryPackage `protobuf:"bytes,2,opt,name=deliveryPackage" json:"deliveryPackage,omitempty"`
}

func (m *DeliverOrderRequest) Reset()                    { *m = DeliverOrderRequest{} }
func (m *DeliverOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*DeliverOrderRequest) ProtoMessage()               {}
func (*DeliverOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{19} }

func (m *DeliverOrderRequest) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *DeliverOrderRequest) GetDeliveryPackage() *DeliveryPackage {
	if m != nil {
		return m.DeliveryPackage
	}
	return nil
}

// 订单发货返回数据
type DeliverOrderReply struct {
	// 是否操作成功
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// 错误信息
	Error *Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *DeliverOrderReply) Reset()                    { *m = DeliverOrderReply{} }
func (m *DeliverOrderReply) String() string            { return proto.CompactTextString(m) }
func (*DeliverOrderReply) ProtoMessage()               {}
func (*DeliverOrderReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{20} }

func (m *DeliverOrderReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *DeliverOrderReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// 发货包裹信息
type DeliveryPackage struct {
	// 物流公司名称
	LogisticsCompany string `protobuf:"bytes,2,opt,name=logisticsCompany" json:"logisticsCompany,omitempty"`
	// 物流单号
	ExpressNumber string `protobuf:"bytes,3,opt,name=expressNumber" json:"expressNumber,omitempty"`
}

func (m *DeliveryPackage) Reset()                    { *m = DeliveryPackage{} }
func (m *DeliveryPackage) String() string            { return proto.CompactTextString(m) }
func (*DeliveryPackage) ProtoMessage()               {}
func (*DeliveryPackage) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{21} }

func (m *DeliveryPackage) GetLogisticsCompany() string {
	if m != nil {
		return m.LogisticsCompany
	}
	return ""
}

func (m *DeliveryPackage) GetExpressNumber() string {
	if m != nil {
		return m.ExpressNumber
	}
	return ""
}

// 修改退款状态请求参数
type ChangeRefundStatusRequest struct {
	// 订单ID
	OrderId uint64       `protobuf:"varint,1,opt,name=orderId" json:"orderId,omitempty"`
	Status  RefundStatus `protobuf:"varint,2,opt,name=status,enum=protos.RefundStatus" json:"status,omitempty"`
}

func (m *ChangeRefundStatusRequest) Reset()                    { *m = ChangeRefundStatusRequest{} }
func (m *ChangeRefundStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangeRefundStatusRequest) ProtoMessage()               {}
func (*ChangeRefundStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{22} }

func (m *ChangeRefundStatusRequest) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *ChangeRefundStatusRequest) GetStatus() RefundStatus {
	if m != nil {
		return m.Status
	}
	return RefundStatus_RefundStatusNormal
}

// 修改退款状态返回值
type ChangeRefundStatusReply struct {
	// 错误信息
	Err *Error `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	// 是否操作成功
	Success bool `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (m *ChangeRefundStatusReply) Reset()                    { *m = ChangeRefundStatusReply{} }
func (m *ChangeRefundStatusReply) String() string            { return proto.CompactTextString(m) }
func (*ChangeRefundStatusReply) ProtoMessage()               {}
func (*ChangeRefundStatusReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{23} }

func (m *ChangeRefundStatusReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *ChangeRefundStatusReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

// 评论订单请求数据
type CommentOrderRequest struct {
	// 订单ID
	OrderId uint64 `protobuf:"varint,1,opt,name=orderId" json:"orderId,omitempty"`
	// 评论信息
	GoodsList []*CommentGoods `protobuf:"bytes,2,rep,name=goodsList" json:"goodsList,omitempty"`
}

func (m *CommentOrderRequest) Reset()                    { *m = CommentOrderRequest{} }
func (m *CommentOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*CommentOrderRequest) ProtoMessage()               {}
func (*CommentOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{24} }

func (m *CommentOrderRequest) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *CommentOrderRequest) GetGoodsList() []*CommentGoods {
	if m != nil {
		return m.GoodsList
	}
	return nil
}

type CommentOrderReply struct {
	// 是否操作成功
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// 错误信息
	Error *Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *CommentOrderReply) Reset()                    { *m = CommentOrderReply{} }
func (m *CommentOrderReply) String() string            { return proto.CompactTextString(m) }
func (*CommentOrderReply) ProtoMessage()               {}
func (*CommentOrderReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{25} }

func (m *CommentOrderReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CommentOrderReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// 评价商品信息
type CommentGoods struct {
	// 商品ID
	GoodsId uint64 `protobuf:"varint,1,opt,name=goodsId" json:"goodsId,omitempty"`
	// SKU ID
	SkuId uint64 `protobuf:"varint,2,opt,name=skuId" json:"skuId,omitempty"`
	// 评价分数
	Point uint32 `protobuf:"varint,3,opt,name=point" json:"point,omitempty"`
	// 评价内容
	Content string `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
	// 评价图片
	Images [][]byte `protobuf:"bytes,5,rep,name=images,proto3" json:"images,omitempty"`
}

func (m *CommentGoods) Reset()                    { *m = CommentGoods{} }
func (m *CommentGoods) String() string            { return proto.CompactTextString(m) }
func (*CommentGoods) ProtoMessage()               {}
func (*CommentGoods) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{26} }

func (m *CommentGoods) GetGoodsId() uint64 {
	if m != nil {
		return m.GoodsId
	}
	return 0
}

func (m *CommentGoods) GetSkuId() uint64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *CommentGoods) GetPoint() uint32 {
	if m != nil {
		return m.Point
	}
	return 0
}

func (m *CommentGoods) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *CommentGoods) GetImages() [][]byte {
	if m != nil {
		return m.Images
	}
	return nil
}

// 获取订单列表请求（为防止数据被恶意爬取，商家 ID、店铺 ID、用户 ID 其中一项需要必填）
type GetOrderListRequest struct {
	// 商家ID（为零时不过滤）
	MerchantId uint64 `protobuf:"varint,1,opt,name=merchantId" json:"merchantId,omitempty"`
	// 店铺ID（为零时不过滤）
	ShopId uint64 `protobuf:"varint,2,opt,name=shopId" json:"shopId,omitempty"`
	// 用户ID（为零时不过滤）
	UserIds []uint64 `protobuf:"varint,3,rep,packed,name=userIds" json:"userIds,omitempty"`
	// 状态值（为零时不过滤）
	Status OrderStatus `protobuf:"varint,4,opt,name=status,enum=protos.OrderStatus" json:"status,omitempty"`
	// 指定订单 ID
	OrderIds []uint64 `protobuf:"varint,5,rep,packed,name=orderIds" json:"orderIds,omitempty"`
	// 创建订单的时间区间
	CreateTime *TimeRange `protobuf:"bytes,6,opt,name=createTime" json:"createTime,omitempty"`
	// 支付订单的时间区间
	PaidTime *TimeRange `protobuf:"bytes,7,opt,name=paidTime" json:"paidTime,omitempty"`
	// 页码
	Page uint64 `protobuf:"varint,8,opt,name=page" json:"page,omitempty"`
	// 分页大小（最大100）
	PageSize uint64 `protobuf:"varint,9,opt,name=pageSize" json:"pageSize,omitempty"`
	// 最后的订单 ID（用于分页使用，输出小于最后订单 ID 的记录）
	LastOrderId uint64 `protobuf:"varint,10,opt,name=lastOrderId" json:"lastOrderId,omitempty"`
	// 退款状态
	RefundStatusList []RefundStatus `protobuf:"varint,11,rep,packed,name=refundStatusList,enum=protos.RefundStatus" json:"refundStatusList,omitempty"`
	// 订单类型
	OrderType OrderType `protobuf:"varint,12,opt,name=orderType,enum=protos.OrderType" json:"orderType,omitempty"`
}

func (m *GetOrderListRequest) Reset()                    { *m = GetOrderListRequest{} }
func (m *GetOrderListRequest) String() string            { return proto.CompactTextString(m) }
func (*GetOrderListRequest) ProtoMessage()               {}
func (*GetOrderListRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{27} }

func (m *GetOrderListRequest) GetMerchantId() uint64 {
	if m != nil {
		return m.MerchantId
	}
	return 0
}

func (m *GetOrderListRequest) GetShopId() uint64 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *GetOrderListRequest) GetUserIds() []uint64 {
	if m != nil {
		return m.UserIds
	}
	return nil
}

func (m *GetOrderListRequest) GetStatus() OrderStatus {
	if m != nil {
		return m.Status
	}
	return OrderStatus_Unknown
}

func (m *GetOrderListRequest) GetOrderIds() []uint64 {
	if m != nil {
		return m.OrderIds
	}
	return nil
}

func (m *GetOrderListRequest) GetCreateTime() *TimeRange {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *GetOrderListRequest) GetPaidTime() *TimeRange {
	if m != nil {
		return m.PaidTime
	}
	return nil
}

func (m *GetOrderListRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetOrderListRequest) GetPageSize() uint64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetOrderListRequest) GetLastOrderId() uint64 {
	if m != nil {
		return m.LastOrderId
	}
	return 0
}

func (m *GetOrderListRequest) GetRefundStatusList() []RefundStatus {
	if m != nil {
		return m.RefundStatusList
	}
	return nil
}

func (m *GetOrderListRequest) GetOrderType() OrderType {
	if m != nil {
		return m.OrderType
	}
	return OrderType_OrderTypeUnknown
}

// 时间范围
type TimeRange struct {
	// 开始时间
	StartTime uint64 `protobuf:"varint,1,opt,name=startTime" json:"startTime,omitempty"`
	// 结束时间
	EndTime uint64 `protobuf:"varint,2,opt,name=endTime" json:"endTime,omitempty"`
}

func (m *TimeRange) Reset()                    { *m = TimeRange{} }
func (m *TimeRange) String() string            { return proto.CompactTextString(m) }
func (*TimeRange) ProtoMessage()               {}
func (*TimeRange) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{28} }

func (m *TimeRange) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *TimeRange) GetEndTime() uint64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

// 获取订单列表请求返回
type GetOrderListReply struct {
	// 订单列表
	OrderList []*Order `protobuf:"bytes,1,rep,name=orderList" json:"orderList,omitempty"`
	// 总记录数
	Count uint64 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	// 错误信息
	Error *Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *GetOrderListReply) Reset()                    { *m = GetOrderListReply{} }
func (m *GetOrderListReply) String() string            { return proto.CompactTextString(m) }
func (*GetOrderListReply) ProtoMessage()               {}
func (*GetOrderListReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{29} }

func (m *GetOrderListReply) GetOrderList() []*Order {
	if m != nil {
		return m.OrderList
	}
	return nil
}

func (m *GetOrderListReply) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetOrderListReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// 确认订单已收货请求数据
type ReceivedOrderRequest struct {
	// 订单ID
	OrderId uint64 `protobuf:"varint,1,opt,name=orderId" json:"orderId,omitempty"`
}

func (m *ReceivedOrderRequest) Reset()                    { *m = ReceivedOrderRequest{} }
func (m *ReceivedOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*ReceivedOrderRequest) ProtoMessage()               {}
func (*ReceivedOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{30} }

func (m *ReceivedOrderRequest) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

// 确认订单已收货返回数据
type ReceivedOrderReply struct {
	// 是否操作成功
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// 错误信息
	Error *Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *ReceivedOrderReply) Reset()                    { *m = ReceivedOrderReply{} }
func (m *ReceivedOrderReply) String() string            { return proto.CompactTextString(m) }
func (*ReceivedOrderReply) ProtoMessage()               {}
func (*ReceivedOrderReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{31} }

func (m *ReceivedOrderReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ReceivedOrderReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateOrderRequest)(nil), "protos.CreateOrderRequest")
	proto.RegisterType((*CreateOrderReply)(nil), "protos.CreateOrderReply")
	proto.RegisterType((*CreateOrderGoods)(nil), "protos.CreateOrderGoods")
	proto.RegisterType((*Attribute)(nil), "protos.Attribute")
	proto.RegisterType((*CreateOrderDiscount)(nil), "protos.CreateOrderDiscount")
	proto.RegisterType((*Address)(nil), "protos.Address")
	proto.RegisterType((*Order)(nil), "protos.Order")
	proto.RegisterType((*Logistics)(nil), "protos.Logistics")
	proto.RegisterType((*Goods)(nil), "protos.Goods")
	proto.RegisterType((*Discount)(nil), "protos.Discount")
	proto.RegisterType((*Payment)(nil), "protos.Payment")
	proto.RegisterType((*StatusModificationLog)(nil), "protos.StatusModificationLog")
	proto.RegisterType((*Comment)(nil), "protos.Comment")
	proto.RegisterType((*OrderDetailsRequest)(nil), "protos.OrderDetailsRequest")
	proto.RegisterType((*OrderDetailsReply)(nil), "protos.OrderDetailsReply")
	proto.RegisterType((*CancelOrderRequest)(nil), "protos.CancelOrderRequest")
	proto.RegisterType((*CancelOrderReply)(nil), "protos.CancelOrderReply")
	proto.RegisterType((*PaidOrderRequest)(nil), "protos.PaidOrderRequest")
	proto.RegisterType((*PaidOrderReply)(nil), "protos.PaidOrderReply")
	proto.RegisterType((*DeliverOrderRequest)(nil), "protos.DeliverOrderRequest")
	proto.RegisterType((*DeliverOrderReply)(nil), "protos.DeliverOrderReply")
	proto.RegisterType((*DeliveryPackage)(nil), "protos.DeliveryPackage")
	proto.RegisterType((*ChangeRefundStatusRequest)(nil), "protos.ChangeRefundStatusRequest")
	proto.RegisterType((*ChangeRefundStatusReply)(nil), "protos.ChangeRefundStatusReply")
	proto.RegisterType((*CommentOrderRequest)(nil), "protos.CommentOrderRequest")
	proto.RegisterType((*CommentOrderReply)(nil), "protos.CommentOrderReply")
	proto.RegisterType((*CommentGoods)(nil), "protos.CommentGoods")
	proto.RegisterType((*GetOrderListRequest)(nil), "protos.GetOrderListRequest")
	proto.RegisterType((*TimeRange)(nil), "protos.TimeRange")
	proto.RegisterType((*GetOrderListReply)(nil), "protos.GetOrderListReply")
	proto.RegisterType((*ReceivedOrderRequest)(nil), "protos.ReceivedOrderRequest")
	proto.RegisterType((*ReceivedOrderReply)(nil), "protos.ReceivedOrderReply")
	proto.RegisterEnum("protos.OrderStatus", OrderStatus_name, OrderStatus_value)
	proto.RegisterEnum("protos.RefundStatus", RefundStatus_name, RefundStatus_value)
	proto.RegisterEnum("protos.OrderType", OrderType_name, OrderType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OrderController service

type OrderControllerClient interface {
	OrderDetails(ctx context.Context, in *OrderDetailsRequest, opts ...grpc.CallOption) (*OrderDetailsReply, error)
	CancelOrder(ctx context.Context, in *CancelOrderRequest, opts ...grpc.CallOption) (*CancelOrderReply, error)
	ChangeRefundStatus(ctx context.Context, in *ChangeRefundStatusRequest, opts ...grpc.CallOption) (*ChangeRefundStatusReply, error)
	PaidOrder(ctx context.Context, in *PaidOrderRequest, opts ...grpc.CallOption) (*PaidOrderReply, error)
	GetOrderList(ctx context.Context, in *GetOrderListRequest, opts ...grpc.CallOption) (*GetOrderListReply, error)
	CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderReply, error)
	DeliverOrder(ctx context.Context, in *DeliverOrderRequest, opts ...grpc.CallOption) (*DeliverOrderReply, error)
	ReceivedOrder(ctx context.Context, in *ReceivedOrderRequest, opts ...grpc.CallOption) (*ReceivedOrderReply, error)
	CommentOrder(ctx context.Context, in *CommentOrderRequest, opts ...grpc.CallOption) (*CommentOrderReply, error)
}

type orderControllerClient struct {
	cc *grpc.ClientConn
}

func NewOrderControllerClient(cc *grpc.ClientConn) OrderControllerClient {
	return &orderControllerClient{cc}
}

func (c *orderControllerClient) OrderDetails(ctx context.Context, in *OrderDetailsRequest, opts ...grpc.CallOption) (*OrderDetailsReply, error) {
	out := new(OrderDetailsReply)
	err := grpc.Invoke(ctx, "/protos.OrderController/OrderDetails", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderControllerClient) CancelOrder(ctx context.Context, in *CancelOrderRequest, opts ...grpc.CallOption) (*CancelOrderReply, error) {
	out := new(CancelOrderReply)
	err := grpc.Invoke(ctx, "/protos.OrderController/CancelOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderControllerClient) ChangeRefundStatus(ctx context.Context, in *ChangeRefundStatusRequest, opts ...grpc.CallOption) (*ChangeRefundStatusReply, error) {
	out := new(ChangeRefundStatusReply)
	err := grpc.Invoke(ctx, "/protos.OrderController/ChangeRefundStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderControllerClient) PaidOrder(ctx context.Context, in *PaidOrderRequest, opts ...grpc.CallOption) (*PaidOrderReply, error) {
	out := new(PaidOrderReply)
	err := grpc.Invoke(ctx, "/protos.OrderController/PaidOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderControllerClient) GetOrderList(ctx context.Context, in *GetOrderListRequest, opts ...grpc.CallOption) (*GetOrderListReply, error) {
	out := new(GetOrderListReply)
	err := grpc.Invoke(ctx, "/protos.OrderController/GetOrderList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderControllerClient) CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderReply, error) {
	out := new(CreateOrderReply)
	err := grpc.Invoke(ctx, "/protos.OrderController/CreateOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderControllerClient) DeliverOrder(ctx context.Context, in *DeliverOrderRequest, opts ...grpc.CallOption) (*DeliverOrderReply, error) {
	out := new(DeliverOrderReply)
	err := grpc.Invoke(ctx, "/protos.OrderController/DeliverOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderControllerClient) ReceivedOrder(ctx context.Context, in *ReceivedOrderRequest, opts ...grpc.CallOption) (*ReceivedOrderReply, error) {
	out := new(ReceivedOrderReply)
	err := grpc.Invoke(ctx, "/protos.OrderController/ReceivedOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderControllerClient) CommentOrder(ctx context.Context, in *CommentOrderRequest, opts ...grpc.CallOption) (*CommentOrderReply, error) {
	out := new(CommentOrderReply)
	err := grpc.Invoke(ctx, "/protos.OrderController/CommentOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OrderController service

type OrderControllerServer interface {
	OrderDetails(context.Context, *OrderDetailsRequest) (*OrderDetailsReply, error)
	CancelOrder(context.Context, *CancelOrderRequest) (*CancelOrderReply, error)
	ChangeRefundStatus(context.Context, *ChangeRefundStatusRequest) (*ChangeRefundStatusReply, error)
	PaidOrder(context.Context, *PaidOrderRequest) (*PaidOrderReply, error)
	GetOrderList(context.Context, *GetOrderListRequest) (*GetOrderListReply, error)
	CreateOrder(context.Context, *CreateOrderRequest) (*CreateOrderReply, error)
	DeliverOrder(context.Context, *DeliverOrderRequest) (*DeliverOrderReply, error)
	ReceivedOrder(context.Context, *ReceivedOrderRequest) (*ReceivedOrderReply, error)
	CommentOrder(context.Context, *CommentOrderRequest) (*CommentOrderReply, error)
}

func RegisterOrderControllerServer(s *grpc.Server, srv OrderControllerServer) {
	s.RegisterService(&_OrderController_serviceDesc, srv)
}

func _OrderController_OrderDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderControllerServer).OrderDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.OrderController/OrderDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderControllerServer).OrderDetails(ctx, req.(*OrderDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderController_CancelOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderControllerServer).CancelOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.OrderController/CancelOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderControllerServer).CancelOrder(ctx, req.(*CancelOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderController_ChangeRefundStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeRefundStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderControllerServer).ChangeRefundStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.OrderController/ChangeRefundStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderControllerServer).ChangeRefundStatus(ctx, req.(*ChangeRefundStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderController_PaidOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaidOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderControllerServer).PaidOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.OrderController/PaidOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderControllerServer).PaidOrder(ctx, req.(*PaidOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderController_GetOrderList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrderListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderControllerServer).GetOrderList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.OrderController/GetOrderList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderControllerServer).GetOrderList(ctx, req.(*GetOrderListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderController_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderControllerServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.OrderController/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderControllerServer).CreateOrder(ctx, req.(*CreateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderController_DeliverOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeliverOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderControllerServer).DeliverOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.OrderController/DeliverOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderControllerServer).DeliverOrder(ctx, req.(*DeliverOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderController_ReceivedOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceivedOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderControllerServer).ReceivedOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.OrderController/ReceivedOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderControllerServer).ReceivedOrder(ctx, req.(*ReceivedOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderController_CommentOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommentOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderControllerServer).CommentOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.OrderController/CommentOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderControllerServer).CommentOrder(ctx, req.(*CommentOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderController_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.OrderController",
	HandlerType: (*OrderControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OrderDetails",
			Handler:    _OrderController_OrderDetails_Handler,
		},
		{
			MethodName: "CancelOrder",
			Handler:    _OrderController_CancelOrder_Handler,
		},
		{
			MethodName: "ChangeRefundStatus",
			Handler:    _OrderController_ChangeRefundStatus_Handler,
		},
		{
			MethodName: "PaidOrder",
			Handler:    _OrderController_PaidOrder_Handler,
		},
		{
			MethodName: "GetOrderList",
			Handler:    _OrderController_GetOrderList_Handler,
		},
		{
			MethodName: "CreateOrder",
			Handler:    _OrderController_CreateOrder_Handler,
		},
		{
			MethodName: "DeliverOrder",
			Handler:    _OrderController_DeliverOrder_Handler,
		},
		{
			MethodName: "ReceivedOrder",
			Handler:    _OrderController_ReceivedOrder_Handler,
		},
		{
			MethodName: "CommentOrder",
			Handler:    _OrderController_CommentOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order.proto",
}

func init() { proto.RegisterFile("order.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 1788 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0x5b, 0x73, 0xdc, 0x4a,
	0x11, 0xb6, 0xf6, 0xe2, 0x5d, 0xf5, 0xee, 0xda, 0xf2, 0xd8, 0x71, 0xe4, 0x3d, 0x07, 0xce, 0x22,
	0x28, 0x30, 0x0e, 0x04, 0x8e, 0xb9, 0x3f, 0x81, 0x6b, 0x4f, 0x2a, 0xc7, 0x45, 0x8e, 0x63, 0xc6,
	0x0e, 0x54, 0x71, 0x29, 0x90, 0xa5, 0xc9, 0x5a, 0x58, 0x2b, 0x09, 0x69, 0xd6, 0xb0, 0xe4, 0x9d,
	0xf7, 0xfc, 0x11, 0xaa, 0xf8, 0x01, 0xfc, 0x0a, 0x1e, 0x78, 0xe0, 0xcf, 0x50, 0x3d, 0x33, 0x1a,
	0x69, 0xf6, 0x92, 0x38, 0x89, 0x29, 0x9e, 0xbc, 0x7d, 0x99, 0x9e, 0x9e, 0xbe, 0x7c, 0xdd, 0x32,
	0xf4, 0xd2, 0x3c, 0x64, 0xf9, 0xe3, 0x2c, 0x4f, 0x79, 0x4a, 0x36, 0xc5, 0x9f, 0x62, 0xd8, 0x0f,
	0xd2, 0xe9, 0x34, 0x4d, 0x24, 0xd7, 0xfb, 0x7b, 0x13, 0xc8, 0x38, 0x67, 0x3e, 0x67, 0xcf, 0x51,
	0x97, 0xb2, 0x3f, 0xcd, 0x58, 0xc1, 0xc9, 0x97, 0x01, 0xa6, 0x2c, 0x0f, 0xae, 0xfd, 0x84, 0x9f,
	0x86, 0xae, 0x35, 0xb2, 0x0e, 0x5b, 0xb4, 0xc6, 0x21, 0xfb, 0xb0, 0x59, 0x5c, 0xa7, 0xd9, 0x69,
	0xe8, 0x36, 0x84, 0x4c, 0x51, 0xc8, 0x9f, 0x15, 0x2c, 0x3f, 0x0d, 0xdd, 0xa6, 0xe4, 0x4b, 0x8a,
	0xfc, 0x10, 0xec, 0x49, 0x9a, 0x86, 0xc5, 0xb3, 0xa8, 0xe0, 0x6e, 0x6b, 0xd4, 0x3c, 0xec, 0x1d,
	0xbb, 0xd2, 0x83, 0xe2, 0x71, 0xed, 0xfa, 0xa7, 0xa8, 0x43, 0x2b, 0x55, 0xf2, 0x13, 0xb0, 0xc3,
	0xa8, 0x08, 0xd2, 0x59, 0xc2, 0x0b, 0xb7, 0x2d, 0xce, 0x7d, 0xb4, 0xe2, 0xdc, 0x67, 0x4a, 0x87,
	0x56, 0xda, 0xe4, 0x9b, 0xd0, 0xf1, 0xc3, 0x30, 0x67, 0x45, 0xe1, 0x6e, 0x8e, 0xac, 0xc3, 0xde,
	0xf1, 0x76, 0x79, 0xf0, 0x44, 0xb2, 0x69, 0x29, 0x47, 0xaf, 0x73, 0x36, 0xf5, 0xf3, 0x1b, 0xb7,
	0x33, 0xb2, 0x0e, 0x6d, 0xaa, 0x28, 0xf2, 0x29, 0x80, 0xcf, 0x79, 0x1e, 0x5d, 0xcd, 0x38, 0x2b,
	0xdc, 0xae, 0xb8, 0x7e, 0x47, 0x5b, 0x29, 0x25, 0xb4, 0xa6, 0x44, 0xf6, 0xa0, 0x1d, 0x15, 0xbf,
	0x8c, 0x32, 0xd7, 0x1e, 0x59, 0x87, 0x5d, 0x2a, 0x09, 0xf2, 0x1d, 0xb0, 0x45, 0x2a, 0x2e, 0xe7,
	0x19, 0x73, 0x61, 0x64, 0x1d, 0x6e, 0x55, 0x76, 0x9e, 0x97, 0x02, 0x5a, 0xe9, 0x10, 0x17, 0x3a,
	0x82, 0x38, 0x0d, 0xdd, 0x9e, 0x08, 0x64, 0x49, 0x7a, 0xbf, 0x05, 0xc7, 0xc8, 0x57, 0x16, 0xcf,
	0xc9, 0x57, 0xa1, 0x2d, 0xc4, 0x22, 0x51, 0xbd, 0xe3, 0x81, 0x61, 0x9a, 0x4a, 0x19, 0x2a, 0xb1,
	0x3c, 0x4f, 0x73, 0x91, 0xb1, 0x9a, 0xd2, 0x13, 0x64, 0x52, 0x29, 0xf3, 0xfe, 0x65, 0x19, 0xe6,
	0x45, 0x3e, 0xd0, 0x19, 0x91, 0x11, 0x5d, 0x09, 0x25, 0x89, 0xaf, 0x2d, 0x6e, 0x66, 0xba, 0x0a,
	0x24, 0x81, 0x5c, 0x91, 0x03, 0x51, 0x03, 0x03, 0x2a, 0x09, 0xe4, 0x66, 0x79, 0x14, 0x30, 0xb7,
	0x25, 0x75, 0x05, 0x41, 0x86, 0xd0, 0xbd, 0x8d, 0xb2, 0x73, 0x21, 0x68, 0x0b, 0x81, 0xa6, 0xc5,
	0x89, 0x34, 0x4a, 0xb8, 0xc8, 0x1f, 0x9e, 0x40, 0x62, 0x21, 0x29, 0x9d, 0x3b, 0x24, 0xc5, 0xfb,
	0x01, 0xd8, 0x5a, 0x40, 0x08, 0xb4, 0x12, 0x7f, 0xca, 0xc4, 0x53, 0x6c, 0x2a, 0x7e, 0xe3, 0x4d,
	0xb7, 0x7e, 0x3c, 0x63, 0xe2, 0x1d, 0x36, 0x95, 0x84, 0xf7, 0x04, 0x76, 0x57, 0xd4, 0x18, 0x1a,
	0xe0, 0x98, 0x47, 0x4b, 0xbc, 0x4e, 0xfc, 0xc6, 0x67, 0xa4, 0x57, 0x7f, 0x64, 0x01, 0x57, 0xb1,
	0xb0, 0xa9, 0xa6, 0xbd, 0x7f, 0x5a, 0xd0, 0x51, 0x25, 0x87, 0x7a, 0x59, 0x9e, 0xde, 0x46, 0x49,
	0x50, 0x3a, 0xa0, 0x69, 0xb4, 0x1b, 0x44, 0x7c, 0xae, 0xce, 0x8b, 0xdf, 0xa8, 0x1f, 0x46, 0x05,
	0xcf, 0xa3, 0x40, 0x46, 0xd3, 0xa6, 0x9a, 0x16, 0x3d, 0xc8, 0x73, 0xc6, 0xb8, 0x88, 0xa8, 0x4d,
	0x15, 0x85, 0xe9, 0x2a, 0x0b, 0xbf, 0x2d, 0x04, 0xba, 0xce, 0x3d, 0xe8, 0xe7, 0x2c, 0x60, 0xd1,
	0x2d, 0xcb, 0xcf, 0x30, 0x04, 0x9b, 0x42, 0x6c, 0xf0, 0x88, 0x03, 0x4d, 0xce, 0x62, 0xd5, 0x08,
	0xf8, 0xd3, 0x7b, 0xdd, 0x81, 0xb6, 0x88, 0x40, 0xbd, 0x2a, 0x2d, 0xa3, 0x2a, 0xdf, 0x19, 0x0f,
	0x1e, 0xa1, 0xef, 0x3e, 0x9f, 0x15, 0xc2, 0xf7, 0xad, 0xe3, 0x5d, 0xa3, 0x64, 0x2f, 0x84, 0x88,
	0x2a, 0x15, 0x72, 0x08, 0xdb, 0xa2, 0xe0, 0x2e, 0x53, 0xee, 0xc7, 0xf5, 0x52, 0x59, 0x64, 0xa3,
	0x83, 0x99, 0x3f, 0xf7, 0xaf, 0x62, 0xa6, 0x6a, 0xa6, 0x24, 0x51, 0xf2, 0x32, 0x67, 0xd1, 0xe4,
	0x9a, 0x8b, 0xa7, 0x0d, 0x68, 0x49, 0x92, 0x1f, 0xc1, 0x20, 0x4e, 0x27, 0x51, 0xc1, 0xa3, 0x40,
	0xc2, 0xd3, 0x42, 0x9f, 0x3f, 0x2b, 0x85, 0xd4, 0xd4, 0x23, 0x8f, 0xea, 0x98, 0x66, 0x8b, 0x43,
	0xba, 0xa9, 0x96, 0x80, 0xec, 0xfb, 0xd0, 0x2f, 0xa1, 0x49, 0xe8, 0x83, 0xd0, 0x77, 0x4a, 0x7d,
	0x0d, 0x60, 0x86, 0x56, 0x1d, 0xc3, 0x7a, 0x6f, 0xc1, 0xb0, 0x4f, 0xa1, 0x97, 0xf9, 0xf3, 0x29,
	0x53, 0xf6, 0xfb, 0xc2, 0xbe, 0x56, 0x3f, 0x97, 0x22, 0x5a, 0xd7, 0x21, 0xbf, 0x81, 0x03, 0x19,
	0xe1, 0x2f, 0xd2, 0x30, 0x7a, 0x19, 0x05, 0x3e, 0x8f, 0xd2, 0xe4, 0x59, 0x3a, 0x11, 0x06, 0x06,
	0xc2, 0xc0, 0x97, 0x4a, 0x03, 0x17, 0xab, 0x14, 0xe9, 0xfa, 0xf3, 0xe8, 0x3a, 0x0e, 0x1a, 0x96,
	0x70, 0x77, 0xcb, 0x74, 0x7d, 0x2c, 0xd9, 0xb4, 0x94, 0xe3, 0xb0, 0x91, 0x7d, 0x76, 0x19, 0x4d,
	0x99, 0xbb, 0x2d, 0x87, 0x4d, 0xc5, 0x41, 0xf9, 0x8b, 0x2c, 0x2c, 0xe5, 0x8e, 0x94, 0x57, 0x1c,
	0xf2, 0x75, 0xd8, 0x3a, 0x99, 0xf1, 0x74, 0xec, 0x27, 0x01, 0x8b, 0x85, 0xce, 0x8e, 0xd0, 0x59,
	0xe0, 0xd6, 0x60, 0x9e, 0x18, 0x30, 0x8f, 0x4d, 0xe9, 0x47, 0xa1, 0x38, 0xb9, 0x2b, 0x31, 0xa8,
	0xa4, 0x2b, 0x0c, 0xda, 0xab, 0x63, 0x90, 0x46, 0xf9, 0x07, 0x6b, 0x51, 0x7e, 0xff, 0x0e, 0x28,
	0xff, 0x63, 0xec, 0xc7, 0x97, 0xb3, 0x24, 0x94, 0xd1, 0x75, 0x1f, 0x8a, 0x33, 0x7b, 0xe5, 0x19,
	0x5a, 0x93, 0x51, 0x43, 0xd3, 0x7b, 0x05, 0xb6, 0xae, 0x4b, 0xf2, 0x31, 0xd8, 0x99, 0x1f, 0xdc,
	0xf8, 0x13, 0xa6, 0x1b, 0xb3, 0x62, 0x90, 0x23, 0x70, 0x74, 0xdd, 0x8e, 0xd3, 0x69, 0xe6, 0x27,
	0x25, 0xc4, 0x2c, 0xf1, 0xc9, 0xd7, 0x60, 0xc0, 0xfe, 0x92, 0x61, 0x3d, 0x9d, 0xcd, 0xa6, 0x57,
	0x2c, 0x57, 0x98, 0x63, 0x32, 0xbd, 0xd7, 0x16, 0xb4, 0xe5, 0x64, 0x40, 0xfc, 0xcf, 0x66, 0xfa,
	0x56, 0x49, 0xfc, 0x3f, 0xa6, 0x82, 0xf7, 0x07, 0xe8, 0xbe, 0x2f, 0x40, 0xe3, 0xab, 0xcb, 0xae,
	0x93, 0x57, 0x4a, 0xac, 0x32, 0x99, 0xde, 0x7f, 0x2c, 0xe8, 0xa8, 0x36, 0xc2, 0x13, 0x3c, 0xf7,
	0x93, 0xc2, 0x0f, 0xb0, 0xe4, 0xd5, 0xfb, 0x6d, 0x6a, 0x32, 0x65, 0x5e, 0xa2, 0x50, 0xda, 0x6c,
	0x94, 0x79, 0x51, 0x0c, 0xac, 0x5a, 0xd5, 0x8c, 0xe3, 0x6b, 0x3f, 0x49, 0x58, 0xac, 0x82, 0xbd,
	0xc0, 0x25, 0x23, 0xdd, 0xd8, 0x5f, 0xa4, 0x21, 0x53, 0x58, 0x5f, 0x67, 0xd5, 0x2c, 0x9d, 0xe7,
	0x69, 0x38, 0x0b, 0xb8, 0xc2, 0xfd, 0x05, 0xae, 0x51, 0xe7, 0x9b, 0x66, 0x9d, 0x7b, 0x09, 0x3c,
	0x58, 0xd9, 0xe2, 0xe4, 0x04, 0x76, 0x42, 0x56, 0xf0, 0x28, 0x11, 0x1c, 0x55, 0xa8, 0xd6, 0x7a,
	0xd0, 0x5e, 0xd6, 0x16, 0xf9, 0xc0, 0x3b, 0x65, 0x08, 0xc4, 0x6f, 0xef, 0x1b, 0xd0, 0x51, 0x38,
	0x80, 0x61, 0x52, 0x3f, 0x99, 0x0c, 0x64, 0x97, 0x56, 0x0c, 0xef, 0xf7, 0xb0, 0x2b, 0xc7, 0x2f,
	0xe3, 0x7e, 0x14, 0x17, 0xe5, 0x82, 0x7a, 0x6f, 0xa3, 0xc8, 0xfb, 0x1d, 0xec, 0x98, 0x17, 0xdc,
	0xef, 0x46, 0xf5, 0x18, 0x88, 0x84, 0x20, 0x63, 0xbf, 0x5e, 0xeb, 0xbe, 0xf7, 0x0b, 0x70, 0x0c,
	0x7d, 0xf4, 0xc6, 0x85, 0x4e, 0x31, 0x0b, 0x02, 0x1c, 0x03, 0x32, 0x3e, 0x25, 0x79, 0x37, 0x17,
	0x7e, 0x05, 0xce, 0xb9, 0x1f, 0x85, 0x77, 0x73, 0x00, 0x81, 0x5b, 0xd5, 0x8d, 0x32, 0xba, 0x34,
	0x44, 0x4a, 0xb9, 0xf7, 0x1c, 0xb6, 0x6a, 0x86, 0xef, 0xc1, 0xd3, 0x1c, 0x76, 0x3f, 0x63, 0x31,
	0xee, 0x22, 0x77, 0x74, 0xf6, 0x04, 0xb6, 0x43, 0x79, 0x60, 0x7e, 0x2e, 0x11, 0x4f, 0xd9, 0x7f,
	0xa8, 0x27, 0xab, 0x29, 0xa6, 0x8b, 0xfa, 0x1e, 0x85, 0x1d, 0xf3, 0xce, 0x7b, 0x78, 0x47, 0x00,
	0xdb, 0x0b, 0xf7, 0xfe, 0x0f, 0x60, 0x38, 0x80, 0x03, 0xc4, 0x88, 0x09, 0x33, 0xe6, 0xc4, 0x5b,
	0x43, 0xf6, 0x2d, 0xbd, 0x7a, 0x35, 0xde, 0x30, 0x6e, 0x94, 0x8e, 0x77, 0x09, 0x0f, 0x57, 0x5d,
	0x82, 0x31, 0xfa, 0x04, 0x9a, 0x2c, 0x5f, 0xea, 0x10, 0x19, 0x07, 0x94, 0xd4, 0x83, 0xd8, 0x30,
	0x82, 0xe8, 0x05, 0xb0, 0xab, 0x3a, 0xfc, 0x8e, 0x79, 0x3e, 0xae, 0xef, 0x5a, 0x0d, 0xb1, 0x9a,
	0xec, 0x2d, 0xec, 0x13, 0x8b, 0x2b, 0x17, 0x26, 0xd6, 0xbc, 0xe4, 0x1e, 0x12, 0xfb, 0x37, 0x0b,
	0xfa, 0xf5, 0xfb, 0xde, 0xe7, 0xdb, 0x48, 0x4e, 0x2f, 0x35, 0x05, 0xe5, 0x3e, 0xe1, 0xe2, 0xb2,
	0x94, 0x70, 0xec, 0x39, 0x89, 0xef, 0x25, 0x89, 0xa8, 0x15, 0x4d, 0xfd, 0x09, 0x93, 0x5f, 0xbf,
	0x7d, 0xaa, 0x28, 0xef, 0xdf, 0x4d, 0xd8, 0x7d, 0xca, 0xe4, 0xcb, 0xf0, 0xb5, 0x1f, 0xfa, 0xe1,
	0xee, 0x42, 0x47, 0xe2, 0x61, 0xe1, 0x36, 0x47, 0x4d, 0x7c, 0x87, 0x22, 0xdf, 0x6d, 0x55, 0xc7,
	0x31, 0x2b, 0x53, 0x26, 0x1d, 0x6e, 0x51, 0x4d, 0xe3, 0x87, 0x5b, 0x50, 0xad, 0x79, 0xf2, 0x9b,
	0x5c, 0xef, 0x47, 0xc8, 0xa3, 0xa2, 0xce, 0x6a, 0x4a, 0xe4, 0xdb, 0xb5, 0x89, 0xd5, 0x59, 0x77,
	0xa0, 0x5a, 0xd6, 0x08, 0xb4, 0x32, 0x84, 0x80, 0xae, 0x1c, 0x34, 0xf8, 0x5b, 0x0e, 0xbd, 0x09,
	0xbb, 0x88, 0xfe, 0xca, 0xc4, 0x37, 0xb9, 0x18, 0x7a, 0x92, 0xc6, 0xd1, 0x1a, 0xfb, 0x85, 0x0c,
	0xe2, 0x69, 0x28, 0x3e, 0xcc, 0x5b, 0xb4, 0xce, 0x22, 0x3f, 0x03, 0xa7, 0xbe, 0x77, 0x89, 0xf2,
	0xeb, 0x8d, 0x9a, 0x6b, 0xdb, 0x66, 0x49, 0xdb, 0x5c, 0x0a, 0xfb, 0x6f, 0x5f, 0x0a, 0xbd, 0x31,
	0xd8, 0xfa, 0x6d, 0x38, 0x1b, 0x0b, 0xee, 0xe7, 0x5c, 0x44, 0x40, 0xad, 0x76, 0x9a, 0x81, 0x49,
	0x63, 0x89, 0x8c, 0x8e, 0xcc, 0x66, 0x49, 0x7a, 0xaf, 0x60, 0xc7, 0xac, 0x0e, 0xac, 0xfd, 0x47,
	0xca, 0x15, 0xf1, 0x0a, 0xcb, 0xfc, 0x60, 0x91, 0x2d, 0x52, 0xc9, 0xab, 0x75, 0x4d, 0x95, 0xaf,
	0x5c, 0xad, 0x74, 0x93, 0x34, 0xdf, 0xd0, 0x24, 0xdf, 0x85, 0x3d, 0x2a, 0x3f, 0x29, 0xef, 0x38,
	0x73, 0xbc, 0x0b, 0x20, 0x0b, 0x27, 0x3e, 0xbc, 0x57, 0x8f, 0x38, 0xf4, 0x6a, 0x25, 0x4a, 0x7a,
	0xd0, 0x79, 0x91, 0xdc, 0x24, 0xe9, 0x9f, 0x13, 0x67, 0x83, 0x00, 0x6c, 0x9e, 0xa5, 0xfc, 0xdc,
	0x9f, 0x3b, 0x16, 0xe9, 0x42, 0x0b, 0xa7, 0x98, 0xd3, 0x20, 0x03, 0xb0, 0x15, 0x6c, 0xb3, 0xd0,
	0x69, 0x92, 0x3e, 0x74, 0x4b, 0xaf, 0x9c, 0x16, 0x1e, 0x19, 0xc7, 0x69, 0xc1, 0x42, 0xa7, 0x8d,
	0x8a, 0x88, 0xd5, 0x31, 0xe3, 0x2c, 0x74, 0x36, 0x85, 0x48, 0xcc, 0x6c, 0xa7, 0x73, 0x54, 0x40,
	0xbf, 0x5e, 0x11, 0x64, 0x1f, 0x9f, 0x56, 0xd1, 0x67, 0x69, 0x3e, 0xf5, 0x63, 0x67, 0x83, 0xb8,
	0x18, 0xa4, 0x8a, 0x7f, 0x92, 0x65, 0xf1, 0x3c, 0x4a, 0x26, 0x8e, 0x45, 0x0e, 0xe0, 0x41, 0x5d,
	0x52, 0x5d, 0xd4, 0x58, 0x34, 0x46, 0x19, 0x6e, 0xb0, 0x4e, 0xf3, 0xe8, 0x29, 0xd8, 0xba, 0x96,
	0xc8, 0x1e, 0x38, 0x9a, 0xa8, 0x5e, 0xbc, 0x03, 0x03, 0xcd, 0xbd, 0xb8, 0x4e, 0x33, 0xc7, 0x32,
	0x58, 0x63, 0x3f, 0x0f, 0x9d, 0xc6, 0xf1, 0x3f, 0xda, 0xb0, 0x2d, 0x78, 0xe3, 0x34, 0xe1, 0x79,
	0x1a, 0xc7, 0x2c, 0x27, 0x9f, 0x43, 0xbf, 0xbe, 0x20, 0x91, 0x8f, 0x8c, 0x9a, 0x31, 0xf7, 0xb2,
	0xe1, 0xc1, 0x6a, 0x61, 0x16, 0xcf, 0xbd, 0x0d, 0xf2, 0x04, 0x7a, 0xb5, 0xdd, 0x86, 0x0c, 0x35,
	0x82, 0x2f, 0x2d, 0x48, 0x43, 0x77, 0xa5, 0x4c, 0x9a, 0xf9, 0x35, 0x90, 0xe5, 0x99, 0x44, 0xbe,
	0xa2, 0x4f, 0xac, 0x1b, 0x8a, 0xc3, 0x4f, 0xde, 0xa4, 0x22, 0x6d, 0xff, 0x14, 0x6c, 0xbd, 0xd2,
	0x10, 0xb7, 0xda, 0x7c, 0xcc, 0xf5, 0x69, 0xb8, 0xbf, 0x42, 0x22, 0x0d, 0x7c, 0x0e, 0xfd, 0x7a,
	0xe7, 0x55, 0xd1, 0x5a, 0x81, 0xd6, 0x55, 0xb4, 0x96, 0x9a, 0x55, 0x45, 0xab, 0xfa, 0xf7, 0x53,
	0x2d, 0x5a, 0x4b, 0xff, 0xae, 0x1d, 0xba, 0x2b, 0x65, 0xda, 0xa1, 0xfa, 0x7e, 0x53, 0x39, 0xb4,
	0x62, 0xd3, 0xaa, 0x1c, 0x5a, 0x5a, 0x89, 0xbc, 0x0d, 0xf2, 0x73, 0x18, 0x18, 0x5d, 0x4a, 0x3e,
	0xae, 0x30, 0x70, 0xb9, 0xdd, 0x87, 0xc3, 0x35, 0x52, 0xed, 0x56, 0x7d, 0x3a, 0x57, 0x6e, 0xad,
	0x58, 0x0c, 0x2a, 0xb7, 0x96, 0x06, 0xba, 0xb7, 0x71, 0x25, 0xff, 0xb1, 0xfd, 0xbd, 0xff, 0x06,
	0x00, 0x00, 0xff, 0xff, 0xb9, 0x70, 0xfb, 0xda, 0xee, 0x16, 0x00, 0x00,
}
