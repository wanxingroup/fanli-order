// Code generated by protoc-gen-go. DO NOT EDIT.
// source: merchant_freight.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 获取商家店铺运费请求数据
type GetMerchantFreightRequest struct {
	// 店铺ID
	ShopId uint64 `protobuf:"varint,1,opt,name=shopId" json:"shopId,omitempty"`
}

func (m *GetMerchantFreightRequest) Reset()                    { *m = GetMerchantFreightRequest{} }
func (m *GetMerchantFreightRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMerchantFreightRequest) ProtoMessage()               {}
func (*GetMerchantFreightRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *GetMerchantFreightRequest) GetShopId() uint64 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

// 获取商家店铺运费返回值
type GetMerchantFreightReply struct {
	// 店铺ID
	ShopId uint64 `protobuf:"varint,1,opt,name=shopId" json:"shopId,omitempty"`
	// 运费设置
	Setting *MerchantFreightSetting `protobuf:"bytes,2,opt,name=setting" json:"setting,omitempty"`
	// 错误信息
	Error *Error `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *GetMerchantFreightReply) Reset()                    { *m = GetMerchantFreightReply{} }
func (m *GetMerchantFreightReply) String() string            { return proto.CompactTextString(m) }
func (*GetMerchantFreightReply) ProtoMessage()               {}
func (*GetMerchantFreightReply) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *GetMerchantFreightReply) GetShopId() uint64 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *GetMerchantFreightReply) GetSetting() *MerchantFreightSetting {
	if m != nil {
		return m.Setting
	}
	return nil
}

func (m *GetMerchantFreightReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// 商家运费设置
type MerchantFreightSetting struct {
	// 是否包邮
	IsFreePostage bool `protobuf:"varint,1,opt,name=isFreePostage" json:"isFreePostage,omitempty"`
	// 满足多少金额进行包邮，单位：分
	ConditionPrice uint64 `protobuf:"varint,2,opt,name=conditionPrice" json:"conditionPrice,omitempty"`
	// 统一运费价格
	Freight uint32 `protobuf:"varint,3,opt,name=freight" json:"freight,omitempty"`
}

func (m *MerchantFreightSetting) Reset()                    { *m = MerchantFreightSetting{} }
func (m *MerchantFreightSetting) String() string            { return proto.CompactTextString(m) }
func (*MerchantFreightSetting) ProtoMessage()               {}
func (*MerchantFreightSetting) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *MerchantFreightSetting) GetIsFreePostage() bool {
	if m != nil {
		return m.IsFreePostage
	}
	return false
}

func (m *MerchantFreightSetting) GetConditionPrice() uint64 {
	if m != nil {
		return m.ConditionPrice
	}
	return 0
}

func (m *MerchantFreightSetting) GetFreight() uint32 {
	if m != nil {
		return m.Freight
	}
	return 0
}

// 设置商家店铺运费请求数据
type SetMerchantFreightRequest struct {
	// 店铺ID
	ShopId uint64 `protobuf:"varint,1,opt,name=shopId" json:"shopId,omitempty"`
	// 运费设置
	Setting *MerchantFreightSetting `protobuf:"bytes,2,opt,name=setting" json:"setting,omitempty"`
}

func (m *SetMerchantFreightRequest) Reset()                    { *m = SetMerchantFreightRequest{} }
func (m *SetMerchantFreightRequest) String() string            { return proto.CompactTextString(m) }
func (*SetMerchantFreightRequest) ProtoMessage()               {}
func (*SetMerchantFreightRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *SetMerchantFreightRequest) GetShopId() uint64 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *SetMerchantFreightRequest) GetSetting() *MerchantFreightSetting {
	if m != nil {
		return m.Setting
	}
	return nil
}

// 设置商家店铺运费返回值
type SetMerchantFreightReply struct {
	// 是否操作成功
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// 错误信息
	Error *Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *SetMerchantFreightReply) Reset()                    { *m = SetMerchantFreightReply{} }
func (m *SetMerchantFreightReply) String() string            { return proto.CompactTextString(m) }
func (*SetMerchantFreightReply) ProtoMessage()               {}
func (*SetMerchantFreightReply) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *SetMerchantFreightReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SetMerchantFreightReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*GetMerchantFreightRequest)(nil), "protos.GetMerchantFreightRequest")
	proto.RegisterType((*GetMerchantFreightReply)(nil), "protos.GetMerchantFreightReply")
	proto.RegisterType((*MerchantFreightSetting)(nil), "protos.MerchantFreightSetting")
	proto.RegisterType((*SetMerchantFreightRequest)(nil), "protos.SetMerchantFreightRequest")
	proto.RegisterType((*SetMerchantFreightReply)(nil), "protos.SetMerchantFreightReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MerchantFreightController service

type MerchantFreightControllerClient interface {
	GetSetting(ctx context.Context, in *GetMerchantFreightRequest, opts ...grpc.CallOption) (*GetMerchantFreightReply, error)
	SetSetting(ctx context.Context, in *SetMerchantFreightRequest, opts ...grpc.CallOption) (*SetMerchantFreightReply, error)
}

type merchantFreightControllerClient struct {
	cc *grpc.ClientConn
}

func NewMerchantFreightControllerClient(cc *grpc.ClientConn) MerchantFreightControllerClient {
	return &merchantFreightControllerClient{cc}
}

func (c *merchantFreightControllerClient) GetSetting(ctx context.Context, in *GetMerchantFreightRequest, opts ...grpc.CallOption) (*GetMerchantFreightReply, error) {
	out := new(GetMerchantFreightReply)
	err := grpc.Invoke(ctx, "/protos.MerchantFreightController/GetSetting", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantFreightControllerClient) SetSetting(ctx context.Context, in *SetMerchantFreightRequest, opts ...grpc.CallOption) (*SetMerchantFreightReply, error) {
	out := new(SetMerchantFreightReply)
	err := grpc.Invoke(ctx, "/protos.MerchantFreightController/SetSetting", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MerchantFreightController service

type MerchantFreightControllerServer interface {
	GetSetting(context.Context, *GetMerchantFreightRequest) (*GetMerchantFreightReply, error)
	SetSetting(context.Context, *SetMerchantFreightRequest) (*SetMerchantFreightReply, error)
}

func RegisterMerchantFreightControllerServer(s *grpc.Server, srv MerchantFreightControllerServer) {
	s.RegisterService(&_MerchantFreightController_serviceDesc, srv)
}

func _MerchantFreightController_GetSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMerchantFreightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantFreightControllerServer).GetSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.MerchantFreightController/GetSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantFreightControllerServer).GetSetting(ctx, req.(*GetMerchantFreightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantFreightController_SetSetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetMerchantFreightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantFreightControllerServer).SetSetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.MerchantFreightController/SetSetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantFreightControllerServer).SetSetting(ctx, req.(*SetMerchantFreightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MerchantFreightController_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.MerchantFreightController",
	HandlerType: (*MerchantFreightControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSetting",
			Handler:    _MerchantFreightController_GetSetting_Handler,
		},
		{
			MethodName: "SetSetting",
			Handler:    _MerchantFreightController_SetSetting_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "merchant_freight.proto",
}

func init() { proto.RegisterFile("merchant_freight.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 320 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x71, 0x29, 0x2d, 0x3a, 0x28, 0x83, 0x87, 0x36, 0xed, 0x00, 0xc5, 0x20, 0xd4, 0xa9,
	0x43, 0xbb, 0xb0, 0x23, 0x5a, 0x31, 0x20, 0x55, 0xf6, 0xc2, 0x86, 0x8a, 0x7b, 0xb4, 0x96, 0x12,
	0x3b, 0xd8, 0xee, 0xd0, 0x8d, 0x9f, 0xc0, 0x7f, 0xe2, 0x8f, 0xa1, 0xc6, 0x09, 0x88, 0x2a, 0x01,
	0xc1, 0x14, 0xdd, 0xcb, 0xbd, 0x4f, 0x2f, 0x2f, 0x07, 0xed, 0x04, 0xad, 0x5c, 0xcd, 0xb5, 0x7f,
	0x7c, 0xb6, 0xa8, 0x96, 0x2b, 0x3f, 0x4c, 0xad, 0xf1, 0x86, 0x36, 0xb2, 0x87, 0xeb, 0x1d, 0x4b,
	0x93, 0x24, 0x46, 0x07, 0x95, 0x8d, 0xa1, 0x3b, 0x45, 0x7f, 0x9f, 0x5b, 0x26, 0xc1, 0xc1, 0xf1,
	0x65, 0x8d, 0xce, 0xd3, 0x36, 0x34, 0xdc, 0xca, 0xa4, 0x77, 0x8b, 0x88, 0xf4, 0xc9, 0xa0, 0xce,
	0xf3, 0x89, 0xbd, 0x11, 0xe8, 0x94, 0xb9, 0xd2, 0x78, 0x53, 0xe5, 0xa1, 0xd7, 0xd0, 0x74, 0xe8,
	0xbd, 0xd2, 0xcb, 0xa8, 0xd6, 0x27, 0x83, 0xa3, 0xd1, 0x69, 0x48, 0xe0, 0x86, 0x3b, 0x18, 0x11,
	0xb6, 0x78, 0xb1, 0x4e, 0x2f, 0xe0, 0x00, 0xad, 0x35, 0x36, 0xda, 0xcf, 0x7c, 0xad, 0xc2, 0x77,
	0xbb, 0x15, 0x79, 0x78, 0xc7, 0x5e, 0x09, 0xb4, 0xcb, 0x41, 0xf4, 0x12, 0x5a, 0xca, 0x4d, 0x2c,
	0xe2, 0xcc, 0x38, 0x3f, 0x5f, 0x62, 0x16, 0xec, 0x90, 0x7f, 0x17, 0xe9, 0x15, 0x9c, 0x48, 0xa3,
	0x17, 0xca, 0x2b, 0xa3, 0x67, 0x56, 0x49, 0xcc, 0x62, 0xd6, 0xf9, 0x8e, 0x4a, 0x23, 0x68, 0xe6,
	0xbd, 0x66, 0x79, 0x5a, 0xbc, 0x18, 0x59, 0x02, 0x5d, 0xf1, 0xd7, 0x2a, 0xff, 0x5f, 0x0b, 0x7b,
	0x80, 0x8e, 0xa8, 0xf8, 0x07, 0x11, 0x34, 0xdd, 0x5a, 0x4a, 0x74, 0x2e, 0xff, 0xd6, 0x62, 0xfc,
	0xea, 0xb2, 0x56, 0xdd, 0xe5, 0xe8, 0x9d, 0x40, 0x77, 0x87, 0x7b, 0x63, 0xb4, 0xb7, 0x26, 0x8e,
	0xd1, 0x52, 0x0e, 0x30, 0xc5, 0xcf, 0x72, 0xcf, 0x0b, 0x42, 0xe5, 0x15, 0xf5, 0xce, 0x7e, 0x5a,
	0x49, 0xe3, 0x0d, 0xdb, 0xdb, 0x32, 0x45, 0x09, 0x53, 0xfc, 0xce, 0x14, 0x55, 0xcc, 0xa7, 0x70,
	0xef, 0xe3, 0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd0, 0x18, 0x87, 0x4f, 0x10, 0x03, 0x00, 0x00,
}
